<template>
  <div class="calendar-wrapper">
    <div class="left-wrapper">
      <text>{{ currentMonth() }}</text>
      <text>月</text>
    </div>
    <div class="right-wrapper">
      <div class="top-calendar-wrapper">
        <!-- <div class="column"></div> -->
        <div class="column left"><text>周日</text></div>
        <!-- <div class="column"></div> -->
        <div class="column center"><text>周三</text></div>
        <div class="column right"><text>周六</text></div>
      </div>
      <div class="bottom-wrapper">
        <div class="row-box" for="item in calendarArray">
          <div class="column" for="itemSon in item">
            <div
              class="time-box"
              style="{{computedStyle(itemSon.count,itemSon.dayStr)}}"
            ></div>
          </div>
        </div>
      </div>
    </div>
  </div>
</template>

<script>
import { dateArray } from './date.js'
export default {
  props: {
    currentDay: {
      default: ''
    },
    calendarArray: {
      default: [
        [{ dayStr: '', count: '2' }, { dayStr: '', count: '' }, { dayStr: '', count: '' }, { dayStr: '', count: '' }, { dayStr: '', count: '' }, { dayStr: '', count: '' }, { dayStr: '', count: '' }],
        [{ dayStr: '', count: '1' }, { dayStr: '', count: '' }, { dayStr: '', count: '' }, { dayStr: '', count: '1' }, { dayStr: '', count: '' }, { dayStr: '', count: '' }, { dayStr: '', count: '' }],
        [{ dayStr: '', count: '3' }, { dayStr: '', count: '1' }, { dayStr: '', count: '' }, { dayStr: '', count: '' }, { dayStr: '', count: '' }, { dayStr: '', count: '' }, { dayStr: '', count: '' }],
        [{ dayStr: '', count: '4' }, { dayStr: '', count: '' }, { dayStr: '', count: '1' }, { dayStr: '', count: '' }, { dayStr: '', count: '1' }, { dayStr: '', count: '' }, { dayStr: '', count: '' }],
        [{ dayStr: '', count: '1' }, { dayStr: '', count: '' }, { dayStr: '', count: '' }, { dayStr: '', count: '' }, { dayStr: '', count: '' }, { dayStr: '', count: '' }, { dayStr: '', count: '' }],
      ]
    }
  },
  data: {
  },
  computedStyle(count, day) {
    console.log(`count=${count}`)
    let styles = {}
    if (count > 5) {
      styles.backgroundColor = '#004D1C'
    }
    else if (count < 5) {
      switch (count) {
        case 1:
          //  console.log(`123`)
          styles.backgroundColor = '#AFF0B5';
          break;
        case 2:
          styles.backgroundColor = '#4CD263';
          break;
        case 3:
          styles.backgroundColor = '#23C343';
          break;
        case 4:
          styles.backgroundColor = '#009A29';
          break;

      }
    }
    if (day === this.currentDay) {
      styles.border = '1px solid #000000'
    }
    return styles
  },
  currentMonth() {
    let date = new Date();
    let currentMonth = date.getMonth();
    let array = ['一','二','三','四','五','六','七','八','九','十','十一','十二']
    return array[currentMonth]
  }

}
</script>

<style lang="less">
.calendar-wrapper {
  width: 100%;
  height: 100%;
  flex-direction: row;
  justify-content: flex-start;
  align-items: center;
  padding-top: 0dp;
  .left-wrapper {
    flex-direction: column;
    align-items: center;
    margin-right: 6dp;
    padding-top: 20dp;
    text {
      margin-bottom: 4dp;
      font-size: 15dp;
    }
  }
  .right-wrapper {
    height: 100%;
    flex: 1;
    flex-direction: column;
  }
  .top-calendar-wrapper {
    width: 100%;
    height: 20dp;
    margin-bottom: 6dp;
    .right {
      justify-content: flex-end;
    }
    .left {
      justify-content: flex-start;
    }
    .center {
      justify-content: center;
    }
    .column {
      height: 20dp;
      flex: 1;
      /* border: 1px solid #000000; */
      text-align: left;

      align-items: center;
      text {
        font-size: 12dp;
      }
    }
  }
}
.bottom-wrapper {
  flex: 1;
  flex-direction: column;
  .row-box {
    width: 100%;
    flex: 1;
    .column {
      flex: 1;
      /* border: 1px solid #000000; */
      justify-content: center;
      align-items: center;
      .time-box {
        width: 14dp;
        height: 14dp;
        /* border: 1px solid rgba(0, 0, 0, 0.5); */
        border-radius: 4dp;
        background-color: #ebedf0;
      }
    }
  }
}
</style>
